{"version":3,"sources":["athens/devcards/blocks.cljs"],"mappings":"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","names":["athens.devcards.blocks/datoms","posh.reagent/transact!","athens.db/dsdb","athens.devcards.blocks/block-style","athens.devcards.blocks/block-disclosure-toggle-style","athens.style.color.cljs$core$IFn$_invoke$arity$1","athens.devcards.blocks/block-indicator-style","G__54238","garden.selectors/&","garden.selectors/after","athens.style/OPACITIES","G__54239","garden.selectors/before","G__54240","athens.devcards.blocks/toggle","dbid","open?","G__54241","G__54242","cljs.core/not","athens.devcards.blocks/block-el","block","map__54243","cljs.core/PROTOCOL_SENTINEL","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","uid","string","open","children","and__4174__auto__","cljs.core/seq","closed?","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","js/module$node_modules$$material_ui$icons$index.KeyboardArrowDown","athens.router/navigate-page","athens.parse-renderer/parse-and-render","iter__4582__auto__","s__54246","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__54248","cljs.core/chunk-buffer","i__54247","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__54245","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","child","athens.devcards.blocks/block-component","ident","posh.reagent/pull","athens.db/block-pull-pattern","cljs.core/deref","athens.db/sort-block","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.blocks\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.parse-renderer :refer [parse-and-render]]\n    [athens.router :refer [navigate-page]]\n    [athens.style :refer [base-styles color OPACITIES]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [devcards.core :refer-macros [defcard-rg]]\n    [garden.selectors :as selectors]\n    [posh.reagent :refer [transact! pull]]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n\n;;; Globals\n\n\n(def datoms\n  [{:db/id          2381\n    :block/uid      \"OaSVyM_nr\"\n    :block/open     true\n    :node/title     \"Athens FAQ\"\n    :block/children [{:db/id          2158\n                      :block/uid      \"BjIm6GeRP\"\n                      :block/string   \"Why open-source?\"\n                      :block/open     true\n                      :block/order    3\n                      :block/children [{:db/id        2163\n                                        :block/uid    \"GNaf3XzpE\"\n                                        :block/string \"The short answer is the security and privacy of your data.\"\n                                        :block/open   true\n                                        :block/order  1}\n                                       {:db/id          2347\n                                        :block/uid      \"jbiKpcmIX\"\n                                        :block/string   \"Firstly, I wouldn't be surprised if Roam was eventually open-sourced.\"\n                                        :block/open     true\n                                        :block/order    0\n                                        :block/children [{:db/id        2176\n                                                          :block/uid    \"gVINXaN8Y\"\n                                                          :block/string \"Suffice it to say that Roam being open-source is undeniably something that the team has already considered. Why is it not open-source already? You'd have to ask the Roam team, but Roam, a business, is not obligated to open-source anything.\"\n                                                          :block/open   true\n                                                          :block/order  2}\n                                                         {:db/id          2346\n                                                          :block/uid      \"ZOxwo0K_7\"\n                                                          :block/string   \"The conclusion of the [[Roam White Paper]] states that Roam's vision is a collective, \\\"open-source\\\" intelligence.\"\n                                                          :block/open     true\n                                                          :block/order    0\n                                                          :block/children [{:db/id        2174\n                                                                            :block/uid    \"WKWPPSYQa\"\n                                                                            :block/string \"((iWmBJaChO))\"\n                                                                            :block/open   true\n                                                                            :block/order  0}]}\n                                                         {:db/id        2349\n                                                          :block/uid    \"VQ-ybRmNh\"\n                                                          :block/string \"In the Roam Slack, I recall Conor saying one eventual goal is to work on a protocol that affords interoperability between open source alternatives. I would share the message but can't find it because of Slack's 10k message limit.\"\n                                                          :block/open   true\n                                                          :block/order  1}\n                                                         {:db/id        2351\n                                                          :block/uid    \"PGGS8MFH_\"\n                                                          :block/string \"Ultimately, we don't know when/if Roam will be open-sourced, but it's possible that Athens could accelerate or catalyze this. Regardless, there will always be some who are open-source maximalists and some who want to self-host, because that's probably really the most secure thing you can do (if you know what you're doing).\"\n                                                          :block/open   true\n                                                          :block/order  3}]}]}]}])\n\n\n(transact! db/dsdb datoms)\n\n;;; Styles\n\n\n(def block-style\n  {:display \"flex\"\n   :line-height \"32px\"\n   :position \"relative\"\n   :justify-content \"flex-start\"\n   :flex-direction \"column\"})\n\n\n(def block-disclosure-toggle-style\n  {:width \"16px\"\n   :height \"32px\"\n   :flex-shrink \"0\"\n   :display \"flex\"\n   :background \"none\"\n   :border \"none\"\n   :border-radius \"100px\"\n   :transition \"all 0.05s ease\"\n   :align-items \"center\"\n   :justify-content \"center\"\n   :padding \"0\"\n   :-webkit-appearance \"none\"\n   ::stylefy/mode [[:hover {:color (color :link-color)}]\n                   [\":is(button)\" {:cursor \"pointer\"}]]\n   ::stylefy/manual [[:&.closed [:svg {:transform \"rotate(-90deg)\"}]]]})\n\n\n(def block-indicator-style\n  {:flex-shrink \"0\"\n   :cursor \"pointer\"\n   :width \"12px\"\n   :margin-right \"4px\"\n   :transition \"all 0.05s ease\"\n   :height \"32px\"\n   :color (color :panel-color)\n   ::stylefy/mode [[:after {:content \"''\"\n                            :background \"currentColor\"\n                            :transition \"all 0.05s ease\"\n                            :border-radius \"100px\"\n                            :box-shadow \"0 0 0 2px transparent\"\n                            :display \"inline-flex\"\n                            :margin \"50% 0 0 50%\"\n                            :transform \"translate(-50%, -50%)\"\n                            :height \"5px\"\n                            :width \"5px\"}]\n                   [:hover {:color (color :link-color)}]\n                   [:before {:content \"''\"\n                             :position \"absolute\"\n                             :top \"24px\"\n                             :bottom \"0\"\n                             :pointer-events \"none\"\n                             :left \"22px\"\n                             :width \"1px\"\n                             :background (color :panel-color)}]]\n   ::stylefy/manual [[:&.open {}]\n                     [:&.closed {}]\n                     [:&.closed [(selectors/& (selectors/after)) {:box-shadow (str \"0 0 0 2px \" (color :body-text-color))\n                                                                  :opacity (:opacity-med OPACITIES)}]]\n                     [:&.closed [(selectors/& (selectors/before)) {:content \"none\"}]]\n                     [:&.closed [(selectors/& (selectors/before)) {:content \"none\"}]]\n                     [:&.selected {}]]})\n\n\n;;; Components\n\n\n(defn toggle\n  [dbid open?]\n  (transact! db/dsdb [{:db/id dbid :block/open (not open?)}]))\n\n\n(declare block-component)\n\n\n(defn block-el\n  \"Two checks to make sure block is open or not: children exist and :block/open bool\"\n  [block]\n  (let [{:block/keys [uid string open children] dbid :db/id} block\n        open?   (and (seq children) open)\n        closed? (and (seq children) (not open))]\n    [:div (use-style block-style)\n     [:div {:style {:display \"flex\"}}\n      (if (seq children)\n        [:button (use-style block-disclosure-toggle-style {:class (cond open? \"open\" closed? \"closed\") :on-click #(toggle dbid open)})\n         [:> mui-icons/KeyboardArrowDown {:style {:font-size \"16px\"}}]]\n        [:span (use-style block-disclosure-toggle-style)])\n      [:a (use-style block-indicator-style {:class (if closed? \"closed\" \"open\") :on-click #(navigate-page uid)})]\n      [parse-and-render string]]\n     (when open?\n       (for [child (:block/children block)]\n         [:div {:style {:margin-left \"32px\"} :key (:db/id child)}\n          [block-el child]]))]))\n\n\n(defn block-component\n  \"This query is long because I'm not sure how to recursively find all child blocks with all attributes\n  '[* {:block/children [*]}] doesn't work\nAlso, why does datascript return a reaction of {:db/id nil} when pulling for [:block/uid uid]?\nno results for q returns nil\nno results for pull eid returns nil\n  \"\n  [ident]\n  (let [block (->> @(pull db/dsdb db/block-pull-pattern ident)\n                   (db/sort-block))]\n    [block-el block]))\n\n\n;;; Devcards\n\n\n(defcard-rg Import-Styles\n  [base-styles])\n\n\n(defcard-rg Block\n  \"Pull entity 2347, a block within Athens FAQ, and its children. Doesn't pull parents for context, unlike `block-page`.\"\n  [block-component 2347])\n\n\n(defcard-rg Block-Embed \"TODO\")\n\n\n(defcard-rg Transclusion \"TODO\")\n"]}
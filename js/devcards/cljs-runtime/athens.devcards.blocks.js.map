{"version":3,"sources":["athens/devcards/blocks.cljs"],"mappings":"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","names":["devcards.core/register-card","devcards.core/card-base","athens.devcards.blocks/datoms","js/athens","js/athens.devcards","js/athens.devcards.blocks","js/athens.devcards.blocks.conn","athens.devcards.blocks/conn","datascript.core.create_conn.cljs$core$IFn$_invoke$arity$1","athens.db/schema","posh.reagent/posh!","posh.reagent/transact!","js/athens.devcards.blocks.t_athens$devcards$blocks50587","athens.devcards.blocks/t_athens$devcards$blocks50587","_50589","meta50588","cljs.core/PROTOCOL_SENTINEL","this__47803__auto__","devcard-opts__47804__auto__","cljs.core.assoc.cljs$core$IFn$_invoke$arity$variadic","v__47822__auto__","cljs.core/fn?","data-atom__47823__auto__","owner__47824__auto__","reagent.core/as-element","cljs.core.merge.cljs$core$IFn$_invoke$arity$variadic","devcards.core/assert-options-map","this__4428__auto__","writer__4429__auto__","opt__4430__auto__","cljs.core/-write","athens.devcards.blocks/->t_athens$devcards$blocks50587","athens.style/base-styles","athens.devcards.blocks/block-style","athens.devcards.blocks/block-disclosure-toggle-style","athens.style/COLORS","athens.devcards.blocks/block-indicator-style","G__50590","garden.selectors/&","garden.selectors/after","G__50591","garden.selectors/before","G__50592","athens.devcards.blocks/toggle","dbid","open?","G__50593","G__50594","cljs.core/not","athens.devcards.blocks/block-el","block","map__50595","cljs.core.apply.cljs$core$IFn$_invoke$arity$2","cljs.core/hash-map","cljs.core.get.cljs$core$IFn$_invoke$arity$2","uid","string","open","children","and__4174__auto__","cljs.core/seq","closed?","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$1","stylefy.core.use_style.cljs$core$IFn$_invoke$arity$2","js/module$node_modules$$material_ui$icons$index.KeyboardArrowDown","athens.router/navigate-page","iter__4582__auto__","s__50598","cljs.core/LazySeq","temp__5735__auto__","cljs.core/chunked-seq?","c__4580__auto__","size__4581__auto__","cljs.core/count","b__50600","cljs.core/chunk-buffer","i__50599","cljs.core._nth.cljs$core$IFn$_invoke$arity$2","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__50597","cljs.core/chunk-rest","cljs.core/first","cljs.core/cons","cljs.core/rest","child","athens.devcards.blocks/block-component","conn","ident","posh.reagent/pull","athens.db/block-pull-pattern","cljs.core/deref","athens.db/sort-block","js/athens.devcards.blocks.t_athens$devcards$blocks50601","athens.devcards.blocks/t_athens$devcards$blocks50601","_50603","meta50602","athens.devcards.blocks/->t_athens$devcards$blocks50601","js/athens.devcards.blocks.t_athens$devcards$blocks50604","athens.devcards.blocks/t_athens$devcards$blocks50604","_50606","meta50605","athens.devcards.blocks/->t_athens$devcards$blocks50604","js/athens.devcards.blocks.t_athens$devcards$blocks50607","athens.devcards.blocks/t_athens$devcards$blocks50607","_50609","meta50608","athens.devcards.blocks/->t_athens$devcards$blocks50607","cljs.core/chunk-first"],"sourcesContent":["(ns athens.devcards.blocks\n  (:require\n    [\"@material-ui/icons\" :as mui-icons]\n    [athens.db :as db]\n    [athens.router :refer [navigate-page]]\n    [athens.style :refer [base-styles COLORS]]\n    [cljsjs.react]\n    [cljsjs.react.dom]\n    [datascript.core :as d]\n    [devcards.core :refer-macros [defcard defcard-rg]]\n    [garden.selectors :as selectors]\n    [posh.reagent :refer [transact! posh! pull]]\n    [stylefy.core :as stylefy :refer [use-style]]))\n\n;; DATA\n\n(defcard Instantiate-Dsdb)\n\n\n(def datoms\n  [{:db/id          2381\n    :block/uid      \"OaSVyM_nr\"\n    :block/open     true\n    :node/title     \"Athens FAQ\"\n    :block/children [{:db/id          2158\n                      :block/uid      \"BjIm6GeRP\"\n                      :block/string   \"Why open-source?\"\n                      :block/open     true\n                      :block/order    3\n                      :block/children [{:db/id        2163\n                                        :block/uid    \"GNaf3XzpE\"\n                                        :block/string \"The short answer is the security and privacy of your data.\"\n                                        :block/open   true\n                                        :block/order  1}\n                                       {:db/id          2347\n                                        :block/uid      \"jbiKpcmIX\"\n                                        :block/string   \"Firstly, I wouldn't be surprised if Roam was eventually open-sourced.\"\n                                        :block/open     true\n                                        :block/order    0\n                                        :block/children [{:db/id        2176\n                                                          :block/uid    \"gVINXaN8Y\"\n                                                          :block/string \"Suffice it to say that Roam being open-source is undeniably something that the team has already considered. Why is it not open-source already? You'd have to ask the Roam team, but Roam, a business, is not obligated to open-source anything.\"\n                                                          :block/open   true\n                                                          :block/order  2}\n                                                         {:db/id          2346\n                                                          :block/uid      \"ZOxwo0K_7\"\n                                                          :block/string   \"The conclusion of the [[Roam White Paper]] states that Roam's vision is a collective, \\\"open-source\\\" intelligence.\"\n                                                          :block/open     true\n                                                          :block/order    0\n                                                          :block/children [{:db/id        2174\n                                                                            :block/uid    \"WKWPPSYQa\"\n                                                                            :block/string \"((iWmBJaChO))\"\n                                                                            :block/open   true\n                                                                            :block/order  0}]}\n                                                         {:db/id        2349\n                                                          :block/uid    \"VQ-ybRmNh\"\n                                                          :block/string \"In the Roam Slack, I recall Conor saying one eventual goal is to work on a protocol that affords interoperability between open source alternatives. I would share the message but can't find it because of Slack's 10k message limit.\"\n                                                          :block/open   true\n                                                          :block/order  1}\n                                                         {:db/id        2351\n                                                          :block/uid    \"PGGS8MFH_\"\n                                                          :block/string \"Ultimately, we don't know when/if Roam will be open-sourced, but it's possible that Athens could accelerate or catalyze this. Regardless, there will always be some who are open-source maximalists and some who want to self-host, because that's probably really the most secure thing you can do (if you know what you're doing).\"\n                                                          :block/open   true\n                                                          :block/order  3}]}]}]}])\n\n\n(defonce conn (d/create-conn db/schema))\n(posh! conn)\n(transact! conn datoms)\n\n\n;; CSS ;;\n\n(defcard-rg Import-Styles\n  [base-styles])\n\n\n(def block-style\n  {:display \"flex\"\n   :line-height \"32px\"\n   :position \"relative\"\n   :justify-content \"flex-start\"\n   :flex-direction \"column\"})\n\n\n(def block-disclosure-toggle-style\n  {:width \"16px\"\n   :height \"32px\"\n   :flex-shrink \"0\"\n   :display \"flex\"\n   :background \"none\"\n   :border \"none\"\n   :border-radius \"100px\"\n   :transition \"all 0.05s ease\"\n   :align-items \"center\"\n   :justify-content \"center\"\n   :padding \"0\"\n   :-webkit-appearance \"none\"\n   ::stylefy/mode [[:hover {:color (:link-color COLORS)}]\n                   [\":is(button)\" {:cursor \"pointer\"}]]\n   ::stylefy/manual [[:&.closed [:svg {:transform \"rotate(-90deg)\"}]]]})\n\n\n(def block-indicator-style\n  {:flex-shrink \"0\"\n   :cursor \"pointer\"\n   :width \"12px\"\n   :margin-right \"4px\"\n   :transition \"all 0.05s ease\"\n   :height \"32px\"\n   :color (:panel-color COLORS)\n   ::stylefy/mode [[:after {:content \"''\"\n                            :background \"currentColor\"\n                            :transition \"all 0.05s ease\"\n                            :border-radius \"100px\"\n                            :box-shadow \"0 0 0 2px transparent\"\n                            :display \"inline-flex\"\n                            :margin \"50% 0 0 50%\"\n                            :transform \"translate(-50%, -50%)\"\n                            :height \"5px\"\n                            :width \"5px\"}]\n                   [:hover {:color (:link-color COLORS)}]\n                   [:before {:content \"''\"\n                             :position \"absolute\"\n                             :top \"24px\"\n                             :bottom \"0\"\n                             :pointer-events \"none\"\n                             :left \"22px\"\n                             :width \"1px\"\n                             :background (:panel-color COLORS)}]]\n   ::stylefy/manual [[:&.open {}]\n                     [:&.closed {}]\n                     [:&.closed [(selectors/& (selectors/after)) {:box-shadow (str \"0 0 0 2px \" (:body-text-color COLORS))\n                                                                  :opacity \"0.5\"}]]\n                     [:&.closed [(selectors/& (selectors/before)) {:content \"none\"}]]\n                     [:&.closed [(selectors/& (selectors/before)) {:content \"none\"}]]\n                     [:&.selected {}]]})\n\n\n;; HELPERS ;;\n(defn toggle\n  [dbid open?]\n  (transact! conn [{:db/id dbid :block/open (not open?)}]))\n\n\n(declare block-component)\n\n\n;; COMPONENTS ;;\n(defn block-el\n  \"Two checks to make sure block is open or not: children exist and :block/open bool\"\n  [block]\n  (let [{:block/keys [uid string open children] dbid :db/id} block\n        open?   (and (seq children) open)\n        closed? (and (seq children) (not open))]\n    [:div (use-style block-style)\n     [:div {:style {:display \"flex\"}}\n      (if (seq children)\n        [:button (use-style block-disclosure-toggle-style {:class (cond open? \"open\" closed? \"closed\") :on-click #(toggle dbid open)})\n         [:> mui-icons/KeyboardArrowDown {:style {:font-size \"16px\"}}]]\n        [:span (use-style block-disclosure-toggle-style)])\n      [:a (use-style block-indicator-style {:class (if closed? \"closed\" \"open\") :on-click #(navigate-page uid)})]\n      [:span string]\n      ;; TODO parse-and-render will break because it uses rfee/href\n      ;;[:span (parse-and-render string)]\n      ]\n     (when open?\n       (for [child (:block/children block)]\n         [:div {:style {:margin-left \"32px\"} :key (:db/id child)}\n          [block-el child]]))]))\n\n\n(defn block-component\n  \"This query is long because I'm not sure how to recursively find all child blocks with all attributes\n  '[* {:block/children [*]}] doesn't work\nAlso, why does datascript return a reaction of {:db/id nil} when pulling for [:block/uid uid]?\nno results for q returns nil\nno results for pull eid returns nil\n  \"\n  [conn ident]\n  (let [block (->> @(pull conn db/block-pull-pattern ident)\n                   (db/sort-block))]\n    [block-el block]))\n\n\n(defcard-rg Block\n  \"Pull entity 2347, a block within Athens FAQ, and its children. Doesn't pull parents, unlike `block-page`\"\n  [block-component conn 2347])\n\n\n(defcard-rg Block-Embed\n  \"TODO\")\n\n\n(defcard-rg Transclusion\n  \"TODO\")\n"]}